#
# Copyright 2016 Netflix, Inc. and [Dynomite Manager contributors](https://github.com/Netflix/dynomite-manager/blob/dev/CONTRIBUTORS.md)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

## Application info
netflix.datacenter=cloud
netflix.appinfo.statusPageUrl=http://${netflix.appinfo.hostname}:8080/REST/v1/admin/Status
netflix.appinfo.homePageUrl=http://${netflix.appinfo.hostname}:8080/Status
netflix.appinfo.healthCheckUrl=http://${netflix.appinfo.hostname}:8080/REST/healthchecksss
netflix.appinfo.port=7001


netflix.environment=${sys:netflix.environment}
com.netflix.akmsclient.keystore.search.path=/apps/tomcat

log4j.rootCategory=WARN,CONSOLE
log4j.logger.com.netflix.florida=INFO
log4j.logger.httpclient=ERROR

#Metric Properties
netflix.atlas.plugin.sendToAtlas=true
netflix.atlas.plugin.sendToEpic=false

#
# Default configuration fast properties (FP) used by Dynomite Manager.
#
# This file is read by Archaius and provides default values for each fast property.
#

# Base URL for the Dynomite REST API
#dm.dynomite.api.url=http://localhost:22222

# Installation directory
# OLD: florida.dyno.home=/apps/dynomite
# ENV: DM_DYNOMITE_INSTALL_DIR
dm.dynomite.install.dir=/apps/dynomite

# Start/stop init scripts
# OLD: florida.dyno.startscript=/apps/dynomite/bin/launch_dynomite.sh
# ENV: DM_DYNOMITE_START_SCRIPT
dm.dynomite.start.script=/apps/dynomite/bin/launch_dynomite.sh
# OLD: florida.dyno.stopscript=/apps/dynomite/bin/kill_dynomite.sh
# ENV: DM_DYNOMITE_STOP_SCRIPT
dm.dynomite.stop.script=/apps/dynomite/bin/kill_dynomite.sh

# Dynomite cluster name used in topology database (ex. Cassandra)
florida.dyno.clustername=dynomitedb-cluster
# OLD: florida.dyno.clustername=dynomite_demo1
# ENV: DM_DYNOMITE_CLUSTER_NAME (OLD: NETFLIX_APP)
dm.dynomite.cluster.name=dynomite_demo1
# OLD: florida.dyno.seed.provider=florida_provider
# ENV: DM_DYNOMITE_SEED_PROVIDER
dm.dynomite.seed.provider=florida_provider
# OLD: florida.dyno.port=8102
# ENV: DM_DYNOMITE_CLIENT_PORT
dm.dynomite.client.port=8102
# OLD: florida.dyno.peer.port=8101
# ENV: DM_DYNOMITE_PEER_PORT
dm.dynomite.peer.port=8101
#florida.dyno.secured.peer.port=8101
#florida.dyno.rack=RAC1
#florida.dyno.asg.rack=true
#florida.dyno.tokens.distribution=vnode
#florida.dyno.request.timeout=5000

# OLD: florida.dyno.gossip.interval=10000
# ENV: DM_DYNOMITE_GOSSIP_INTERVAL
dm.dynomite.gossip.interval=10000

# OLD: florida.dyno.tokens.hash=murmur
# ENV: DM_DYNOMITE_HASH_ALGORITHM
dm.dynomite.hash.algorithm=murmur

# Preconnect to the backend storage engine
# OLD: florida.dyno.connections.preconnect=true
# ENV: DM_DYNOMITE_STORAGE_PRECONNECT
dm.dynomite.storage.preconnect=true

# OLD: florida.dyno.multiregion=true
# ENV: DM_DYNOMITE_MULTI_DC
dm.dynomite.multi.dc=true

# Dynomite memory buffer (mbuf) size in bytes
# OLD: florida.dyno.mbuf.size=16384
# ENV: DM_DYNOMITE_MBUF_SIZE
dm.dynomite.mbuf.size=16384

# OLD: florida.dyno.allocated.messages=200000
# ENV: DM_DYNOMITE_MAX_ALLOCATED_MESSAGES
dm.dynomite.max.allocated.messages=200000

#florida.zones.available=
#florida.racks.available=

# OLD: florida.dyno.processname=dynomite
# ENV: DM_DYNOMITE_PROCESS_NAME
dm.dynomite.process.name=dynomite

# OLD: florida.yamlLocation=/apps/dynomite/conf/dynomite.yml
# ENV: DM_DYNOMITE_YAML
dm.dynomite.yaml=/apps/dynomite/conf/dynomite.yml

# OLD: florida.secured.option=datacenter
# ENV: DM_DYNOMITE_INTRA_CLUSTER_SECURITY
dm.dynomite.intra.cluster.security=datacenter

# OLD: florida.auto.eject.hosts=true
# ENV: DM_DYNOMITE_AUTO_EJECT_HOSTS
dm.dynomite.auto.eject.hosts

# Cassandra Cluster for token management
# ======================================

# OLD: florida.bootcluster=cass_dyno
# ENV: DM_CASSANDRA_CLUSTER_NAME
dm.cassandra.cluster.name=cass_dyno

# OLD: florida.cassandra.keyspace.name=dyno_bootstrap
# ENV: DM_CASSANDRA_KEYSPACE_NAME
dm.cassandra.keyspace.name=dyno_bootstrap

# OLD: florida.cassandra.thrift.port=9160
# ENV: DM_CASSANDRA_THRIFT_PORT
dm.cassandra.thrift.port=9160

# OLD: florida.cassandra.comma.separated.hostnames=127.0.0.1
# DM_CASSANDRA_SEEDS
dm.cassandra.seeds=127.0.0.1

# Amazon specific
# ===============
#florida.az.asgname=UNUSED-CONFIGURATION-OPTION
#florida.az.region=
# AWS Security Group (SG): Must match SG assigned to DM instance
# Default: dynomite_demo1
florida.acl.groupname=ddb-sg-base
florida.vpc=true

# Dual Account
# ============
#florida.ec2.roleassumption.arn=
#florida.vpc.roleassumption.arn=
#florida.roleassumption.dualaccount=false
# Availability Zone (AZ) aka Rack
#florida.roleassumption.az=

# Dynomite Consistency
# ====================
# OLD: florida.dyno.read.consistency=DC_ONE
# ENV: DM_DYNOMITE_READ_CONSISTENCY
dm.dynomite.read.consistency=DC_ONE

# OLD: florida.dyno.write.consistency=DC_ONE
# ENV: DM_DYNOMITE_WRITE_CONSISTENCY
dm.dynomite.write.consistency=DC_ONE

# Warm up
# =======
#florida.dyno.warm.force=false
#florida.dyno.warm.bootstrap=false
#florida.dyno.warm.bytes.sync.diff=100000
#florida.dyno.warm.msec.bootstraptime=900000

# Backup and Restore
# ==================
#florida.dyno.backup.snapshot.enabled=false
# S3 bucket name to store backup files
#florida.dyno.backup.bucket.name=dynomite-backup
#florida.dyno.backup.s3.base_dir=backup
#florida.dyno.backup.hour=12
#florida.dyno.backup.schedule=day
#florida.dyno.backup.restore.enabled=false
#florida.dyno.backup.restore.date=20101010

# VPC
# ===
# Classic
#florida.instanceDataRetriever=com.netflix.dynomitemanager.sidecore.config.AwsInstanceDataRetriever
# VPC
#florida.instanceDataRetriever=com.netflix.dynomitemanager.sidecore.config.VpcInstanceDataRetriever

# Data store (aka backend)
# ============================

# Max percentage of system memory to be allocated to the backend data store.
# OLD: florida.dyno.storage.mem.pct.int=85
# ENV: DM_DATASTORE_MAX_MEMORY_PERCENT
dm.datastore.max.memory.percent=85

# Backend data store server engine: redis or ardb-rocksdb.
# OLD: florida.dyno.redis.compatible.engine
# ENV: DM_DATASTORE_ENGINE
dm.datastore.engine=redis

# Data store: Redis
# =================

# OLD: florida.redis.conf
# ENV: DM_REDIS_CONF
dm.redis.conf=/apps/nfredis/conf/redis.conf

# OLD: florida.dyno.persistence.directory
# ENV: DM_REDIS_DATA_DIR
dm.redis.data.dir=/mnt/data/nfredis

# OLD: florida.dyno.persistence.enabled
# ENV: DM_REDIS_PERSISTENCE_ENABLED
dm.redis.persistence.enabled=false

# OLD: florida.dyno.persistence.type
# ENV: DM_REDIS_PERSISTENCE_TYPE
dm.redis.persistence.type=aof

# OLD: florida.redis.init.start
# ENV: DM_REDIS_START_SCRIPT
dm.redis.start.script=/apps/nfredis/bin/launch_nfredis.sh

# OLD: florida.redis.init.stop
# ENV: DM_REDIS_STOP_SCRIPT
dm.redis.stop.script=/apps/nfredis/bin/kill_redis.sh

# Data store: ARDB with RocksDB
# =============================

# Maximum number of memtables (active and immutable) used by RocksDB.
# OLD: florida.ardb.rocksdb.conf
# ENV: DM_ARDB_ROCKSDB_CONF
dm.ardb.rocksdb.conf=/apps/ardb/conf/rocksdb.conf

# Maximum number of memtables (active and immutable) used by RocksDB.
# OLD: florida.dyno.ardb.rocksdb.maxwritebuffernumber=16
# ENV: DM_ARDB_ROCKSDB_MAX_WRITE_BUFFER_NUMBER
dm.ardb.rocksdb.max.write.buffer.number=16

# OLD: florida.dyno.ardb.rocksdb.minwritebuffernametomerge=4
# ENV: DM_ARDB_ROCKSDB_MIN_WRITE_BUFFER_NUMBER_TO_MERGE
dm.ardb.rocksdb.min.write.buffer.number.to.merge=4

# OLD: florida.ardb.rocksdb.init.start
# ENV: DM_ARDB_ROCKSDB_START_SCRIPT
dm.ardb.rocksdb.start.script=/apps/ardb/bin/launch_ardb.sh

# OLD: florida.ardb.rocksdb.init.stop
# ENV: DM_ARDB_ROCKSDB_STOP_SCRIPT
dm.ardb.rocksdb.stop.script=/apps/ardb/bin/kill_ardb.sh

# ARDB RocksDB write buffer size in MB.
# OLD: florida.dyno.ardb.rocksdb.writebuffermb=128
# ENV: DM_ARDB_ROCKSDB_WRITE_BUFFER_SIZE
dm.ardb.rocksdb.write.buffer.size=128

# Eureka
# ======

# OLD: florida.eureka.host.supplier.enabled=true
# ENV: DM_EUREKA_HOSTS_SUPPLIER_ENABLED
dm.eureka.hosts.supplier.enabled=true

# Additional configuration files / providers
#@next=